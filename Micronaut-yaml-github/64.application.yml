micronaut:
  application:
    name: sample-service
  security:
    # This service relies on a JWT token being passed in the Authentication http header as a bearer token.
    # The token should be generated by the caller using an API application registered with Auth0.
    # The API application audience and issuer must match the settings below.
    # Auth0 generates signed tokens and we need the url to the JWKS key set otherwise the token cannot be validated.
    token:
      jwt:
        claims-validators:
          openid-idtoken: true
          audience: 'https://test'
          issuer: 'https://dev-3es8m9if.us.auth0.com/'
          expiration: true
          subject-not-null: true
        signatures:
          jwks:
            api:
              url: 'https://dev-3es8m9if.us.auth0.com/.well-known/jwks.json'
      # the name of the key in the JWT claims object that contains the roles/perms
      roles-name: "permissions"
    intercept-url-map:
      - pattern: /swagger-ui/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /swagger/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /redoc/**
        httpMethod: GET
        access:
          - isAnonymous()
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
datasources:
  default:
    url: jdbc:postgresql://localhost:5432/postgres
    driverClassName: org.postgresql.Driver
    username: postgres
    password: ''
    schema-generate: CREATE_DROP
    dialect: POSTGRES
jpa:
  default:
    properties:
      hibernate:
        show_sql: true
liquibase:
  datasources:
    default:
      change-log: 'classpath:db/liquibase-changelog.xml'
      liquibase-schema: 'public'
netty:
  default:
    allocator:
      max-order: 3

endpoints:
  info:
    sensitive: false
    enabled: true
  health:
    enabled: true
    details-visible: anonymous
jackson:
  serialization:
    writeDatesAsTimestamps: false
service-utils:
  pagination:
    default:
      default-page-size: 100
      max-allowed-page-size: 1000