# Source: https://github.com/JasonHHouse/gaps/tree/de08ab1363290ce51343c4f2cea2f9faf960f84a/GapsWeb/src/main/resources/application.yaml
# Sourcegraph query: "context:global (lang:yaml OR lang:Java Properties) file:resources/application.(yaml|properties)"
#Copyright 2019 Jason H House
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Maximum time the response should be cached (in seconds)
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
# The resources are public and any cache may store the response.

logging:
  level:
    root: INFO
spring:
  mvc:
    async:
      request-timeout: -1
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 120
          must-revalidate: true
          cache-public: true
server:
  servlet:
    context-path: /
  http2:
    enabled: true
  port: 8484
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    whitelabel:
      enabled: false
    path: /error
info:
  app:
    name: Gaps
    description: Gaps searches through your Plex Server for all movies, then queries for known movies in the same collection. If those movies don't exist in your library, Gaps will recommend getting those movies, legally of course.
    version: 0.10.4
    storageFolder: /usr/data
    properties:
      rssFeed: rssFeed.json
      gapsProperties: gaps.properties
      movieIds: movieIds.json
      ownedMovies: ownedMovies.json
      recommendedMovies: recommendedMovies.json