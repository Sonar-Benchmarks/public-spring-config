# Source: https://github.com/ghkdqhrbals/spring-chatting-server/tree/32ba7da0cf94b28dd983d23edf86c0b3bb84e766/customer-service/src/main/resources/application.yaml
# Sourcegraph query: "context:global (lang:yaml OR lang:Java Properties) file:resources/application.(yaml|properties)"
spring:
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  application:
    name: customer-service
  messages:
    basename: messages,errors
  datasource:
    url: 'jdbc:postgresql://localhost:5434/customer'
    hikari:
      username: 'postgres'
      password: 'password'
      maximum-pool-size: 5
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        use-new-id-generator-mappings: true
        order_inserts: true
        ddl-auto: create
        format_sql: true
        jdbc:
          time_zone: UTC
          batch_size: 50
  kafka:
    bootstrap-servers: kafka1:9092

kafka:
  broker:
    number: 1


#  main:
#    allow-bean-definition-overriding: true


server:
  error:
    include-stacktrace: never
  port: 0


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: health, httpexchanges, beans, busrefresh

logging:
  level:
    com.example.shopuserservice.client: DEBUG